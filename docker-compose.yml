version: '3.7'

services:
  client:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
  database:
    image: 'mongo'
    container_name: 'mongo-db'
    restart: unless-stopped
    command: mongod
    ports:
      - '27017-27019:27017-27019'
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      MONGO_USER: "${MONGO_USER}"
      MONGO_PASSWORD: "${MONGO_PASSWORD}"
      MONGO_USER_DATABASE: "${MONGO_USER_DATABASE}"
      MONGODB_DATA_DIR: /data/db
    volumes:
      - ./db/create_mongo_user.sh:/docker-entrypoint-initdb.d/create_mongo_user.sh
      - mongodbdata:/data/db
    networks:
      - backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 app:app
    ports:
      - "5000:5000"
    environment:
      MONGO_USER: "${MONGO_USER}"
      MONGO_PASSWORD: "${MONGO_PASSWORD}"
      MONGO_USER_DATABASE: "${MONGO_USER_DATABASE}"
      MONGO_HOST: database
    volumes:
      - appdata:/var/www/
    depends_on:
      - database
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local